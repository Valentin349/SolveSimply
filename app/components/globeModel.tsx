/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 scene.gltf -t 
Author: Rafael Rodrigues (https://sketchfab.com/RafaelBR873D)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/earth-hologram-1ec23b9e71724a3499a29334c7318909
Title: Earth Hologram
*/
import * as THREE from 'three'
import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations, useScroll } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame, useThree } from '@react-three/fiber'


type ActionName = 'Action' | 'Sphere.002Action.001'
interface GLTFAction extends THREE.AnimationClip {
 name: ActionName;
}

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh
  }
  materials: {
    Arestas: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>(null)
  const { nodes, materials, animations } = useGLTF('/globe/scene.gltf') as GLTFResult
  const { actions } = useAnimations(animations, group)
 
  return (
    <group ref={group} {...props} dispose={null} name='globe'>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, -0.2, 0]}>
          <group name="root">
            <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <group name="Sphere002_0">
                <mesh name="Object_4" geometry={nodes.Object_4.geometry}>
                  <meshStandardMaterial color={0xff0000} emissive={0xe85a4f}/>
                </mesh>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/globe/scene.gltf')
