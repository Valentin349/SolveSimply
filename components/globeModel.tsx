/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 scene.gltf -t 
Author: Rafael Rodrigues (https://sketchfab.com/RafaelBR873D)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/earth-hologram-1ec23b9e71724a3499a29334c7318909
Title: Earth Hologram
*/
import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGLTF, Trail } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useFrame } from "@react-three/fiber";
import Plane from "./PaperPlane";

type ActionName = "Action" | "Sphere.002Action.001";
interface GLTFAction extends THREE.AnimationClip {
  name: ActionName;
}

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh;
  };
  materials: {
    Arestas: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);
  const { nodes } = useGLTF("/globe/scene.gltf") as GLTFResult;

  useFrame((_, delta) => {
    const globe = group.current!.children[0];
    const plane1 = globe.children[0];
    const plane2 = globe.children[1];

    globe.rotateY(0.1 * delta);

    plane1.rotateY(-1.8 * delta);
    plane1.rotateX(delta);

    plane2.rotateY(1.8 * delta);
  });

  return (
    <group
      ref={group}
      {...props}
      dispose={null}
      name="globe"
      rotation={[0, 0, 0.2]}
    >
      <mesh name="Object_4" geometry={nodes.Object_4.geometry}>
        <meshBasicMaterial color={0xe85a4f} />
        <mesh scale={0.99} name="sphere_interior">
          <sphereGeometry />
          <meshBasicMaterial color={0xeae7dc} />
          <Plane position={[-2.6, -2, 0]} />
        </mesh>
        <mesh scale={0.99} name="sphere_interior" rotation={[0, 0, -0.3]}>
          <sphereGeometry />
          <meshBasicMaterial color={0xeae7dc} />
          <Plane position={[3.2, -2, 0]} />
        </mesh>
      </mesh>
    </group>
  );
}

useGLTF.preload("/globe/scene.gltf");
