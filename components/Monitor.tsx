/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 monitor.glb -t 
Author: Marco Zakaria (https://sketchfab.com/marcoZakaria)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/computer-monitor-lowpoly-model-1d4ee42eda804b02b05b63721921c1d7
Title: Computer Monitor Lowpoly Model
*/

import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { RectAreaLightHelper } from "three/addons/helpers/RectAreaLightHelper.js";
import { useThree } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh;
    Object_5: THREE.Mesh;
    Object_7: THREE.Mesh;
    Object_9: THREE.Mesh;
  };
  materials: {
    Display: THREE.MeshStandardMaterial;
    Main: THREE.MeshStandardMaterial;
    Stand: THREE.MeshStandardMaterial;
    Main_MAt: THREE.MeshStandardMaterial;
  };
};

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/monitor.glb") as GLTFResult;
  const { scene } = useThree();
  

  const addScreenLight = () => {
    const areaLight = new THREE.RectAreaLight("white", 2.0, 3.55, 1.85);
    areaLight.lookAt(0, 0, 5);
    areaLight.position.set(-0.2, 0.45, 2.26);

    scene.add(areaLight);
  };


  return (
    <group>
      <group {...props} dispose={null} position={[-0.2, -1, 2.5]}>
        <group position={[0, -0.055, 0.027]}>
          <mesh geometry={nodes.Object_4.geometry}>
            <meshStandardMaterial emissive={"#EAE7DC"} />
          </mesh>
          <mesh geometry={nodes.Object_5.geometry} material={materials.Main} />
        </group>
        <mesh
          geometry={nodes.Object_7.geometry}
          material={materials.Stand}
          position={[0, -0.055, 0.027]}
          rotation={[-1.571, 0, 0]}
          scale={0.272}
        />
        <mesh
          geometry={nodes.Object_9.geometry}
          material={materials.Main_MAt}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/monitor.glb");
