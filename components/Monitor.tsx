/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 monitor.glb -t 
Author: Marco Zakaria (https://sketchfab.com/marcoZakaria)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/computer-monitor-lowpoly-model-1d4ee42eda804b02b05b63721921c1d7
Title: Computer Monitor Lowpoly Model
*/

import * as THREE from "three";
import React from "react";
import { Mask, useGLTF, useMask, useScroll } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useFrame, useLoader } from "@react-three/fiber";
import img from "../public/website_example.png";

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh;
    Object_5: THREE.Mesh;
    Object_7: THREE.Mesh;
    Object_9: THREE.Mesh;
  };
  materials: {
    Display: THREE.MeshStandardMaterial;
    Main: THREE.MeshStandardMaterial;
    Stand: THREE.MeshStandardMaterial;
    Main_MAt: THREE.MeshStandardMaterial;
  };
};

function Screen(props: JSX.IntrinsicElements["mesh"]) {
  const texture = useLoader(THREE.TextureLoader, img.src);
  const stencil = useMask(1);
  return (
    <mesh {...props} position={[0, -1.9, -0.26]}>
      <planeGeometry args={[3.8, 8.78, 1]} />
      <meshBasicMaterial map={texture} {...stencil} />
    </mesh>
  );
}

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/monitor.glb") as GLTFResult;

  return (
    <group>
      <group {...props} dispose={null} position={[-0.3, -1, 2.5]}>
        <group position={[0, -0.055, 0.027]}>
          <Mask id={1} geometry={nodes.Object_4.geometry}></Mask>
          <Screen name="monitorScreen" />
          <mesh geometry={nodes.Object_5.geometry} material={materials.Main} />
        </group>
        <mesh
          castShadow
          geometry={nodes.Object_7.geometry}
          material={materials.Stand}
          position={[0, -0.055, 0.027]}
          rotation={[-1.571, 0, 0]}
          scale={0.272}
        />
        <mesh
          castShadow
          geometry={nodes.Object_9.geometry}
          material={materials.Main_MAt}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/monitor.glb");
